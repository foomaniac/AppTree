// <auto-generated />
using System;
using AppTree.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppTree.Infrastructure.Migrations
{
    [DbContext(typeof(AppTreeContext))]
    [Migration("20210519111319_AddHostIdToAppEnvironment")]
    partial class AddHostIdToAppEnvironment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.Application", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnName("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Repository")
                        .HasColumnName("Repository")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Summary")
                        .HasColumnName("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.ToTable("Application","dbo");
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.ApplicationEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("EnvironmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HostId")
                        .HasColumnName("HostId")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("HostId");

                    b.ToTable("ApplicationEnvironment","dbo");
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType","dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Web Page"
                        },
                        new
                        {
                            Id = 2,
                            Type = "API"
                        });
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.Dependency", b =>
                {
                    b.Property<int>("ParentApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.HasKey("ParentApplicationId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Dependency","dbo");
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.HostAggregate.Host", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Domain")
                        .HasColumnName("Domain")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnName("HostName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Summary")
                        .HasColumnName("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Host","dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Domain = "agepartnership.com",
                            HostName = "PRAPI02",
                            Location = "OnPrem"
                        },
                        new
                        {
                            Id = 2,
                            Domain = "agepartnership.com",
                            HostName = "PRAPI11",
                            Location = "OnPrem"
                        },
                        new
                        {
                            Id = 3,
                            Domain = "agepartnership.com",
                            HostName = "PRAPI21",
                            Location = "OnPrem"
                        },
                        new
                        {
                            Id = 4,
                            Domain = "agepartnership.com",
                            HostName = "PRAPI04",
                            Location = "Azure"
                        },
                        new
                        {
                            Id = 5,
                            Domain = "agepartnership.com",
                            HostName = "PRAPI05",
                            Location = "Azure"
                        });
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.Application", b =>
                {
                    b.HasOne("AppTree.Domain.AggregateModels.ApplicationAggregate.ApplicationType", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.ApplicationEnvironment", b =>
                {
                    b.HasOne("AppTree.Domain.AggregateModels.ApplicationAggregate.Application", "ParentApplication")
                        .WithMany("Environments")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AppTree.Domain.AggregateModels.HostAggregate.Host", "Host")
                        .WithMany()
                        .HasForeignKey("HostId");
                });

            modelBuilder.Entity("AppTree.Domain.AggregateModels.ApplicationAggregate.Dependency", b =>
                {
                    b.HasOne("AppTree.Domain.AggregateModels.ApplicationAggregate.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTree.Domain.AggregateModels.ApplicationAggregate.Application", "ParentApplication")
                        .WithMany("Dependencies")
                        .HasForeignKey("ParentApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
